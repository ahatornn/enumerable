name: Тесты

on:
  push:
    branches: [ "main", "master" ]
  pull_request:
    branches: [ "main", "master" ]

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 20

    strategy:
      matrix:
        go-version: [ '1.24', '1.25' ]

    steps:
      - name: Checkout кода
        uses: actions/checkout@v4

      - name: Установка Go ${{ matrix.go-version }}
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}

      - name: Проверка версии Go
        run: go version

      - name: Загрузка зависимостей
        run: go mod download

      - name: Проверка форматирования gofmt
        run: |
          if [ "$(gofmt -l . | wc -l)" -gt 0 ]; then
            echo "Ошибка: найдены файлы с неправильным форматированием:"
            gofmt -l .
            echo "Пожалуйста, запустите 'gofmt -w .' для исправления"
            exit 1
          else
            echo "Все файлы отформатированы корректно"
          fi

      - name: Запуск тестов (без benchmark)
        run: go test -v ./... -bench=^$ -coverprofile=coverage.txt -timeout=10m

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: ahatornn/enumerable